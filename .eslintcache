[{"D:\\EaD\\JavaScripy\\romannumerals\\src\\index.js":"1","D:\\EaD\\JavaScripy\\romannumerals\\src\\App.js":"2","D:\\EaD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js":"3","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js":"4","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js":"5","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js":"6","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js":"7","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js":"8","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js":"9","D:\\EAD\\JavaScripy\\romannumerals\\src\\index.js":"10","D:\\EAD\\JavaScripy\\romannumerals\\src\\App.js":"11","D:\\EAD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js":"12","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js":"13","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js":"14","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js":"15","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js":"16","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js":"17","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js":"18","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\decimal.js":"19","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\roman.js":"20","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\index.js":"21","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\styles.js":"22"},{"size":184,"mtime":1608642546075,"results":"23","hashOfConfig":"24"},{"size":219,"mtime":1608738465354,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608859852005,"results":"26","hashOfConfig":"24"},{"size":580,"mtime":1608749796831,"results":"27","hashOfConfig":"24"},{"size":371,"mtime":1608746390581,"results":"28","hashOfConfig":"24"},{"size":592,"mtime":1608748520165,"results":"29","hashOfConfig":"24"},{"size":3988,"mtime":1609035568589,"results":"30","hashOfConfig":"24"},{"size":563,"mtime":1608859984387,"results":"31","hashOfConfig":"24"},{"size":1171,"mtime":1608860254075,"results":"32","hashOfConfig":"24"},{"size":184,"mtime":1608642548000,"results":"33","hashOfConfig":"34"},{"size":219,"mtime":1608738466000,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1608859854000,"results":"36","hashOfConfig":"34"},{"size":339,"mtime":1609637496272,"results":"37","hashOfConfig":"34"},{"size":433,"mtime":1609357411080,"results":"38","hashOfConfig":"34"},{"size":592,"mtime":1608748522000,"results":"39","hashOfConfig":"34"},{"size":1988,"mtime":1609707475618,"results":"40","hashOfConfig":"34"},{"size":565,"mtime":1609202785568,"results":"41","hashOfConfig":"34"},{"size":1335,"mtime":1609696292907,"results":"42","hashOfConfig":"34"},{"size":2709,"mtime":1609705224320,"results":"43","hashOfConfig":"34"},{"size":553,"mtime":1609336079317,"results":"44","hashOfConfig":"34"},{"size":1333,"mtime":1609637478853,"results":"45","hashOfConfig":"34"},{"size":1211,"mtime":1609353532491,"results":"46","hashOfConfig":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"l93ant",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"9qh3sr",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"D:\\EaD\\JavaScripy\\romannumerals\\src\\index.js",[],["100","101"],"D:\\EaD\\JavaScripy\\romannumerals\\src\\App.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js",["102"],"import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport Home from '../TitleColor';\r\nimport ConversorNumeric from '../ConversorNumeric';\r\n// import ServerList from '../ServerList';\r\n// import ServerName from '../ServerName';\r\n// import ChannelInfo from '../ChannelInfo';\r\n// import ChannelList from '../ChannelList';\r\n// import UserInfo from '../UserInfo';\r\n// import UserList from '../UserList';\r\n// import ChannelData from '../ChannelData';\r\n\r\nexport default function() {\r\n  return (\r\n    <Grid>\r\n      <Home/>\r\n      <ConversorNumeric/>\r\n    </Grid>\r\n  );\r\n};\r\n","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js",["103"],"import React from 'react';\r\n\r\nimport { Container, TitleRoman, SVG } from './styles';\r\n\r\nimport Logo from './coliseum.svg'\r\n\r\n// import ServerList from '../ServerList';\r\n// import ServerName from '../ServerName';\r\n// import ChannelInfo from '../ChannelInfo';\r\n// import ChannelList from '../ChannelList';\r\n// import UserInfo from '../UserInfo';\r\n// import UserList from '../UserList';\r\n// import ChannelData from '../ChannelData';\r\n\r\nexport default function() {\r\n  return (\r\n    <Container>\r\n      <SVG src={Logo}/>\r\n      <TitleRoman>Roman numerals </TitleRoman>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js",["104","105","106","107"],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\index.js",[],["108","109"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\App.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js",["110"],"import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport Home from '../TitleColor';\r\nimport ConversorNumeric from '../ConversorNumeric';\r\nimport Description from '../Description';\r\n\r\nexport default function() {\r\n  return (\r\n    <Grid>\r\n      <Home/>\r\n      <ConversorNumeric/>\r\n      <Description/>\r\n    </Grid>\r\n  );\r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js",["111"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js",["112","113"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js",[],["114","115"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\decimal.js",["116","117","118","119","120"],"import getRoman  from './roman'\r\nimport React from 'react'\r\nimport {Result} from '../styles'\r\n\r\n\r\n\r\nexport default function (value) {\r\n        let result = [];\r\n        let number = parseInt(value);\r\n        let display = [];\r\n        let millenium = false;\r\n        let mult = 1;\r\n\r\n        function sub(value, comp){\r\n          let boolean = number - value * 1000 >= 0 && number - value * 1000 < comp * 1000;\r\n          return boolean;\r\n        }\r\n        if( number > 3000000){\r\n          alert('O número maximo suportado é 3000000')\r\n          return ['', '']\r\n        }\r\n    \r\n        while(number > 0){\r\n          let numeral = ''\r\n          \r\n          if((number >= 1 && number < 5) || sub(4, 1)){\r\n            numeral = 'I'\r\n    \r\n            if(number - 4  == 0 || sub(4, 1))\r\n              numeral += 'V'\r\n            \r\n    \r\n          }\r\n          else if( (number >= 5  && number < 10 ) || sub(5,1) || sub(9,1)){\r\n            if(number - 9  == 0 || sub(9,1))\r\n              numeral = 'IX'\r\n            else\r\n              numeral = 'V'\r\n          }\r\n          else if( (number >= 10 && number < 50) || sub(10,30) || sub(40,10) ){\r\n            numeral = 'X'\r\n            if((number - 40  < 10 && number - 40 >= 0) || sub(40,10) )\r\n              numeral += 'L'\r\n          }\r\n          else if(( number >= 50 && number < 100 ) || sub(50,40) || sub(90,10)){\r\n            if((number - 90 < 10 && number - 90 >= 0 ) || sub(90,10))\r\n              numeral = 'XC'\r\n            else\r\n              numeral = 'L'\r\n          }\r\n          else if(( number >= 100  && number < 500 || sub(100,300) || sub(400,100) )){\r\n            numeral = 'C'\r\n            if((number - 400   < 100 && number - 400  >= 0) || sub(400,100))\r\n              numeral += 'D'\r\n          }\r\n          else if( (number >= 500  && number < 1000) || sub(500,400) || sub(900,100)){\r\n            if((number - 900  < 100 && number - 900  >= 0) || sub(900,100))\r\n            numeral = 'CM'\r\n          else\r\n            numeral = 'D'\r\n          }\r\n          else if(number >= 1000 * mult && number < 4000 * mult){\r\n            numeral = 'M'\r\n          }\r\n          \r\n          \r\n          if(number > 3999){\r\n            millenium = true;\r\n            mult=  1000\r\n          }\r\n          else{\r\n            millenium = false;\r\n            mult = 1;\r\n          }\r\n          \r\n          \r\n          display.push(<Result millenium={millenium}>{numeral}</Result>)\r\n          number -= getRoman(numeral) * mult   \r\n          result.push(numeral)\r\n          \r\n        }\r\n        // display = [<Result millenium={false}>{result}</Result>, <Result>{result}</Result>]\r\n        result = result.join(\"\")\r\n        return [result, display]\r\n    //   }\r\n}","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\roman.js",["121","122"],"\r\n\r\n\r\nconst romanConverter = {\r\n  'I': 1,\r\n  'V': 5,\r\n  'X':10,\r\n  'L':50,\r\n  'C':100,\r\n  'D':500,\r\n  'M':1000\r\n}\r\n\r\nexport default function(text){\r\n    let arrayNumerals = text.toString().split('');\r\n    let trade = text.toString().split('');\r\n    \r\n\r\n    let number = 0;\r\n    arrayNumerals.forEach((element, index, array) => {\r\n      if((romanConverter[array[index]] < romanConverter[array[index+1]])){\r\n          number -=  romanConverter[element]\r\n        \r\n      }\r\n      else\r\n      number += romanConverter[element]\r\n    })\r\n    return number;\r\n}","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\index.js",["123"],"import React from 'react';\r\n\r\nimport getDecimal from '../ConversorNumeric/functions/decimal'\r\nimport { Container, Introdution, List } from './styles';\r\n\r\n\r\nfunction ListItem(props) {\r\n  let numbers = {\r\n    1: [1,2,3,4,5,6,7,8,9,10],\r\n    2: [15,20,30,40,50,100,200,400,500,1000]\r\n  }\r\n\r\n  return <li>{getDecimal(numbers[props.page][props.value])[0]} = {numbers[props.page][props.value]}</li>;\r\n}\r\n\r\nfunction NumberList(props) {\r\n  const numbers = props.numbers;\r\n  const listItems = numbers.map((number, index) =>\r\n    // Correct! Key should be specified inside the array.\r\n    <ListItem value={number + index} page={props.page}/>\r\n  );\r\n  return (\r\n    <ul>\r\n      {listItems}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default function() {\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Introdution><article>\r\n        Na Roma Antiga, foi inventado o sistema de numeração romana, composto por sete letras: I, V, X, L, C, D, M.\r\n        <br/>\r\n        Ademais, sendo equivalente à respectivamente 1, 5, 10, 50, 100, 500 e 1000\r\n        </article></Introdution>\r\n        <List>\r\n          <h1>Exemplos de números romanos para decimais.</h1>\r\n          <div>\r\n          <NumberList numbers={Array(10).fill(0)} page={1} />\r\n          <NumberList numbers={Array(10).fill(0)} page={2} />\r\n          </div>\r\n        </List>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\styles.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":15,"column":1,"nodeType":"130","endLine":22,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":15,"column":1,"nodeType":"130","endLine":22,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":39,"column":34,"nodeType":"133","messageId":"134","endLine":39,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":104,"column":28,"nodeType":"133","messageId":"134","endLine":104,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":121,"column":76,"nodeType":"133","messageId":"134","endLine":121,"endColumn":78},{"ruleId":"135","severity":1,"message":"136","line":125,"column":11,"nodeType":"137","messageId":"138","endLine":125,"endColumn":16},{"ruleId":"124","replacedBy":"139"},{"ruleId":"126","replacedBy":"140"},{"ruleId":"128","severity":1,"message":"129","line":9,"column":1,"nodeType":"130","endLine":17,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":15,"column":1,"nodeType":"130","endLine":22,"endColumn":2},{"ruleId":"131","severity":1,"message":"141","line":38,"column":17,"nodeType":"133","messageId":"134","endLine":38,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":61,"column":76,"nodeType":"133","messageId":"134","endLine":61,"endColumn":78},{"ruleId":"124","replacedBy":"142"},{"ruleId":"126","replacedBy":"143"},{"ruleId":"128","severity":1,"message":"129","line":7,"column":1,"nodeType":"130","endLine":86,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":29,"column":28,"nodeType":"133","messageId":"134","endLine":29,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":35,"column":28,"nodeType":"133","messageId":"134","endLine":35,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":51,"column":36,"nodeType":"146","messageId":"147","endLine":51,"endColumn":38},{"ruleId":"144","severity":1,"message":"145","line":51,"column":52,"nodeType":"146","messageId":"147","endLine":51,"endColumn":54},{"ruleId":"128","severity":1,"message":"129","line":14,"column":1,"nodeType":"130","endLine":29,"endColumn":2},{"ruleId":"135","severity":1,"message":"148","line":16,"column":9,"nodeType":"137","messageId":"138","endLine":16,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":29,"column":1,"nodeType":"130","endLine":48,"endColumn":2},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar",["149"],["150"],"Expected '!==' and instead saw '!='.",["149"],["150"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'trade' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]