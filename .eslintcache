[{"D:\\EaD\\JavaScripy\\romannumerals\\src\\index.js":"1","D:\\EaD\\JavaScripy\\romannumerals\\src\\App.js":"2","D:\\EaD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js":"3","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js":"4","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js":"5","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js":"6","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js":"7","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js":"8","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js":"9","D:\\EAD\\JavaScripy\\romannumerals\\src\\index.js":"10","D:\\EAD\\JavaScripy\\romannumerals\\src\\App.js":"11","D:\\EAD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js":"12","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js":"13","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js":"14","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js":"15","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js":"16","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js":"17","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js":"18","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\decimal.js":"19","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\roman.js":"20","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\index.js":"21","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\styles.js":"22"},{"size":184,"mtime":1608642546075,"results":"23","hashOfConfig":"24"},{"size":219,"mtime":1608738465354,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608859852005,"results":"26","hashOfConfig":"24"},{"size":580,"mtime":1608749796831,"results":"27","hashOfConfig":"24"},{"size":371,"mtime":1608746390581,"results":"28","hashOfConfig":"24"},{"size":592,"mtime":1608748520165,"results":"29","hashOfConfig":"24"},{"size":3988,"mtime":1609035568589,"results":"30","hashOfConfig":"24"},{"size":563,"mtime":1608859984387,"results":"31","hashOfConfig":"24"},{"size":1171,"mtime":1608860254075,"results":"32","hashOfConfig":"24"},{"size":183,"mtime":1609893139077,"results":"33","hashOfConfig":"34"},{"size":219,"mtime":1609947531086,"results":"35","hashOfConfig":"34"},{"size":385,"mtime":1609947728950,"results":"36","hashOfConfig":"34"},{"size":1173,"mtime":1609946589814,"results":"37","hashOfConfig":"34"},{"size":703,"mtime":1609947400221,"results":"38","hashOfConfig":"34"},{"size":297,"mtime":1609941205254,"results":"39","hashOfConfig":"34"},{"size":2554,"mtime":1609877357151,"results":"40","hashOfConfig":"34"},{"size":688,"mtime":1609945855329,"results":"41","hashOfConfig":"34"},{"size":1638,"mtime":1609947307301,"results":"42","hashOfConfig":"34"},{"size":2358,"mtime":1609874604132,"results":"43","hashOfConfig":"34"},{"size":553,"mtime":1609336079317,"results":"44","hashOfConfig":"34"},{"size":1335,"mtime":1609873707936,"results":"45","hashOfConfig":"34"},{"size":1246,"mtime":1609947993452,"results":"46","hashOfConfig":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"l93ant",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"9qh3sr",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\EaD\\JavaScripy\\romannumerals\\src\\index.js",[],["100","101"],"D:\\EaD\\JavaScripy\\romannumerals\\src\\App.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js",["102"],"import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport Home from '../TitleColor';\r\nimport ConversorNumeric from '../ConversorNumeric';\r\n// import ServerList from '../ServerList';\r\n// import ServerName from '../ServerName';\r\n// import ChannelInfo from '../ChannelInfo';\r\n// import ChannelList from '../ChannelList';\r\n// import UserInfo from '../UserInfo';\r\n// import UserList from '../UserList';\r\n// import ChannelData from '../ChannelData';\r\n\r\nexport default function() {\r\n  return (\r\n    <Grid>\r\n      <Home/>\r\n      <ConversorNumeric/>\r\n    </Grid>\r\n  );\r\n};\r\n","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js",["103"],"import React from 'react';\r\n\r\nimport { Container, TitleRoman, SVG } from './styles';\r\n\r\nimport Logo from './coliseum.svg'\r\n\r\n// import ServerList from '../ServerList';\r\n// import ServerName from '../ServerName';\r\n// import ChannelInfo from '../ChannelInfo';\r\n// import ChannelList from '../ChannelList';\r\n// import UserInfo from '../UserInfo';\r\n// import UserList from '../UserList';\r\n// import ChannelData from '../ChannelData';\r\n\r\nexport default function() {\r\n  return (\r\n    <Container>\r\n      <SVG src={Logo}/>\r\n      <TitleRoman>Roman numerals </TitleRoman>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js",["104","105","106","107"],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\index.js",[],["108","109"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\App.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js",["110","111"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js",["112"],"import React from 'react';\r\n\r\nimport { Container, TitleRoman, SVG } from './styles';\r\n\r\nimport Logo from '../../images/coliseum.svg'\r\n\r\n\r\nexport default function() {\r\n  return (\r\n    <Container>\r\n      <SVG src={Logo}/>\r\n      <TitleRoman>Roman numerals </TitleRoman>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js",["113","114","115"],"import React from 'react';\r\n\r\nimport { Container, Content,  Converter, Button, Result } from './styles';\r\n\r\nimport getDecimal from './functions/decimal';\r\nimport getRoman from './functions/roman'\r\n\r\nlet romanVerification = 'IVXLCDM'.slice('');\r\n\r\n\r\n\r\n\r\nexport default class data extends React.Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      result:''\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    // this.addResult = this.addResult.bind(this)\r\n  }\r\n  \r\n  addResultRoman(){\r\n    let result = getRoman(this.state.text);\r\n    let numeral = getDecimal(result).text\r\n\r\n    if(result != numeral)\r\n    this.setState({\r\n      text:numeral\r\n    })\r\n    return (<Result children={result}></Result> );\r\n  }\r\n\r\n  addResultDecimal(){\r\n    let data = getDecimal(this.state.text).data;\r\n\r\n    data = data.map(element => {\r\n      return (<Result millenium={element.millenium} children={element.numeral}></Result>)\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  handleClick(e) {\r\n    let result = this.state.text;\r\n    console.log(getDecimal(result));\r\n    if(isNaN(result) && result)\r\n      result = this.addResultRoman()\r\n    else\r\n      result = this.addResultDecimal();\r\n    \r\n    this.setState({\r\n      result:result\r\n    })\r\n  }\r\n\r\n\r\n  handleChange(e){\r\n    let lastLetter = e.target.value[e.target.value.length -1];\r\n\r\n    \r\n\r\n    if(lastLetter == null){\r\n      this.setState({text: e.target.value.toUpperCase()});\r\n      return\r\n    } \r\n\r\n    if(e.target.value.length > 7)\r\n      return\r\n\r\n      if(window.innerWidth <= 800 ){\r\n        this.setState({text: e.target.value.toUpperCase()});\r\n        return\r\n      }\r\n    if(romanVerification.includes(lastLetter.toUpperCase()) || !isNaN(e.target.value)){\r\n      if(!isNaN(e.target.value) &&  isNaN(lastLetter) && !this.state.text == '' ){\r\n        return\r\n      }\r\n      this.setState({text: e.target.value.toUpperCase()});\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Container>\r\n        <Content>\r\n          <label for=\"converter\">Digite um número decimal ou Algarismo Romano</label>\r\n          <Converter id=\"converter\" onKeyPress={(e) => e.key == 'Enter' ? this.handleClick(e) : ''} maxLength=\"7\" max=\"7\" type=\"text\" onChange={this.handleChange} value={this.state.text}/>\r\n          <Button onClick={this.handleClick}>Converter Número</Button>\r\n          <section children={this.state.result}></section>\r\n        </Content>\r\n        \r\n  \r\n      </Container>\r\n    );\r\n  }\r\n  \r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\decimal.js",["116","117","118","119","120","121"],"import getRoman  from './roman'\r\nimport React from 'react'\r\nimport {Result} from '../styles'\r\n\r\nlet mult = 1;\r\n\r\n\r\nfunction getCondition(number){\r\n  return [(number >= 1 && number < 4) ,\r\n    number - 4  == 0 || sub(number,4, 1),\r\n    (number >= 5  && number < 9 ) || sub(number,5,4) ,\r\n    number - 9  == 0 || sub(number,9,1),\r\n    (number >= 10 && number < 40) || sub(number,10,30) ,\r\n    (number - 40  < 10 && number - 40 >= 0) || sub(number,40,10),\r\n    ( number >= 50 && number < 90 ) || sub(number,50,40) ,\r\n    (number - 90 < 10 && number - 90 >= 0 ) || sub(number,90,10),\r\n    ( number >= 100  && number < 400 )|| sub(number,100,300) ,\r\n    ((number - 400 < 100 && number - 400 >= 0) || sub(number, 400,100)),\r\n    ( number >= 500 && number < 900 ) || sub(number,500,400) ,\r\n    (number - 900  < 100 && number - 900  >= 0) || sub(number,900,100),\r\n    (number >= 1000 * mult && number < 4000 * mult)\r\n  ]\r\n}\r\n\r\nfunction sub(number,value, comp){return number - value * 1000 >= 0 && number - value * 1000 < comp * 1000;}\r\n\r\nexport default function (value) {\r\n        let text = [];\r\n        // let display = [];\r\n\r\n        let millenium = false;\r\n        let data = []\r\n        let number = parseInt(value) || 0;\r\n\r\n        let results = ['I', 'IV', 'V', 'IX','X', 'XL' , 'L', 'XC', 'C', 'CD', 'D', 'CM', 'M']\r\n       \r\n\r\n        if( number > 3000000){\r\n          alert('O número maximo suportado é 3000000')\r\n          return ['', '']\r\n        }\r\n        \r\n        if(number == 1000){\r\n          console.log('1000');\r\n        }\r\n\r\n        let j = 0;\r\n        while(number > 0){\r\n          let numeral = ''\r\n          if(getCondition(number)[j]){\r\n            numeral = results[j];\r\n            data.push({numeral, millenium})\r\n          }\r\n          getCondition(number)[j]?j=0:j++;\r\n          \r\n\r\n          if(number > 3999){\r\n            millenium = true;\r\n            mult=  1000\r\n          }\r\n          else{\r\n            millenium = false;\r\n            mult = 1;\r\n          }\r\n          \r\n\r\n          // display.push(<Result millenium={millenium}>{numeral}</Result>)\r\n          number -= getRoman(numeral) * mult   \r\n          text.push(numeral)\r\n\r\n          \r\n        }\r\n       \r\n        text = text.join(\"\")\r\n        // return display.filter(element => element.props.children != '')\r\n        console.log(data);\r\n        return {text, data}\r\n}","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\roman.js",["122","123"],"\r\n\r\n\r\nconst romanConverter = {\r\n  'I': 1,\r\n  'V': 5,\r\n  'X':10,\r\n  'L':50,\r\n  'C':100,\r\n  'D':500,\r\n  'M':1000\r\n}\r\n\r\nexport default function(text){\r\n    let arrayNumerals = text.toString().split('');\r\n    let trade = text.toString().split('');\r\n    \r\n\r\n    let number = 0;\r\n    arrayNumerals.forEach((element, index, array) => {\r\n      if((romanConverter[array[index]] < romanConverter[array[index+1]])){\r\n          number -=  romanConverter[element]\r\n        \r\n      }\r\n      else\r\n      number += romanConverter[element]\r\n    })\r\n    return number;\r\n}","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\index.js",["124"],"import React from 'react';\r\n\r\nimport getDecimal from '../ConversorNumeric/functions/decimal'\r\nimport { Container, Introdution, List } from './styles';\r\n\r\n\r\nfunction ListItem(props) {\r\n  let numbers = {\r\n    1: [1,2,3,4,5,6,7,8,9,10],\r\n    2: [15,20,30,40,50,100,200,400,500,1000]\r\n  }\r\n\r\n  return <li>{getDecimal(numbers[props.page][props.value]).text} = {numbers[props.page][props.value]}</li>;\r\n}\r\n\r\nfunction NumberList(props) {\r\n  const numbers = props.numbers;\r\n  const listItems = numbers.map((number, index) =>\r\n    // Correct! Key should be specified inside the array.\r\n    <ListItem value={number + index} page={props.page}/>\r\n  );\r\n  return (\r\n    <ul>\r\n      {listItems}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default function() {\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Introdution><article>\r\n        Na Roma Antiga, foi inventado o sistema de numeração romana, composto por sete letras: I, V, X, L, C, D, M.\r\n        <br/>\r\n        Ademais, sendo equivalente à respectivamente 1, 5, 10, 50, 100, 500 e 1000\r\n        </article></Introdution>\r\n        <List>\r\n          <h1>Exemplos de números romanos para decimais.</h1>\r\n          <div>\r\n          <NumberList numbers={Array(10).fill(0)} page={1} />\r\n          <NumberList numbers={Array(10).fill(0)} page={2} />\r\n          </div>\r\n        </List>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\styles.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":15,"column":1,"nodeType":"131","endLine":22,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":15,"column":1,"nodeType":"131","endLine":22,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":39,"column":34,"nodeType":"134","messageId":"135","endLine":39,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":104,"column":28,"nodeType":"134","messageId":"135","endLine":104,"endColumn":30},{"ruleId":"132","severity":1,"message":"133","line":121,"column":76,"nodeType":"134","messageId":"135","endLine":121,"endColumn":78},{"ruleId":"136","severity":1,"message":"137","line":125,"column":11,"nodeType":"138","messageId":"139","endLine":125,"endColumn":16},{"ruleId":"125","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"136","severity":1,"message":"142","line":3,"column":24,"nodeType":"138","messageId":"139","endLine":3,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":30,"column":1,"nodeType":"131","endLine":44,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":8,"column":1,"nodeType":"131","endLine":15,"endColumn":2},{"ruleId":"132","severity":1,"message":"143","line":31,"column":15,"nodeType":"134","messageId":"135","endLine":31,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":80,"column":75,"nodeType":"134","messageId":"135","endLine":80,"endColumn":77},{"ruleId":"132","severity":1,"message":"133","line":95,"column":62,"nodeType":"134","messageId":"135","endLine":95,"endColumn":64},{"ruleId":"136","severity":1,"message":"144","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"145","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":10,"column":17,"nodeType":"134","messageId":"135","endLine":10,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":12,"column":17,"nodeType":"134","messageId":"135","endLine":12,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":27,"column":1,"nodeType":"131","endLine":78,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":43,"column":19,"nodeType":"134","messageId":"135","endLine":43,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":14,"column":1,"nodeType":"131","endLine":29,"endColumn":2},{"ruleId":"136","severity":1,"message":"146","line":16,"column":9,"nodeType":"138","messageId":"139","endLine":16,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":29,"column":1,"nodeType":"131","endLine":48,"endColumn":2},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar",["147"],["148"],"'withTheme' is defined but never used.","Expected '!==' and instead saw '!='.","'React' is defined but never used.","'Result' is defined but never used.","'trade' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]