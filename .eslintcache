[{"D:\\EaD\\JavaScripy\\romannumerals\\src\\index.js":"1","D:\\EaD\\JavaScripy\\romannumerals\\src\\App.js":"2","D:\\EaD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js":"3","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js":"4","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js":"5","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js":"6","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js":"7","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js":"8","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js":"9","D:\\EAD\\JavaScripy\\romannumerals\\src\\index.js":"10","D:\\EAD\\JavaScripy\\romannumerals\\src\\App.js":"11","D:\\EAD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js":"12","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js":"13","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js":"14","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js":"15","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js":"16","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js":"17","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js":"18","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\decimal.js":"19","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\roman.js":"20","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\index.js":"21","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\styles.js":"22"},{"size":184,"mtime":1608642546075,"results":"23","hashOfConfig":"24"},{"size":219,"mtime":1608738465354,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1608859852005,"results":"26","hashOfConfig":"24"},{"size":580,"mtime":1608749796831,"results":"27","hashOfConfig":"24"},{"size":371,"mtime":1608746390581,"results":"28","hashOfConfig":"24"},{"size":592,"mtime":1608748520165,"results":"29","hashOfConfig":"24"},{"size":3988,"mtime":1609035568589,"results":"30","hashOfConfig":"24"},{"size":563,"mtime":1608859984387,"results":"31","hashOfConfig":"24"},{"size":1171,"mtime":1608860254075,"results":"32","hashOfConfig":"24"},{"size":184,"mtime":1608642548000,"results":"33","hashOfConfig":"34"},{"size":219,"mtime":1608738466000,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1608859854000,"results":"36","hashOfConfig":"34"},{"size":339,"mtime":1609637496272,"results":"37","hashOfConfig":"34"},{"size":433,"mtime":1609357411080,"results":"38","hashOfConfig":"34"},{"size":592,"mtime":1608748522000,"results":"39","hashOfConfig":"34"},{"size":2609,"mtime":1609699045784,"results":"40","hashOfConfig":"34"},{"size":565,"mtime":1609202785568,"results":"41","hashOfConfig":"34"},{"size":1335,"mtime":1609696292907,"results":"42","hashOfConfig":"34"},{"size":2694,"mtime":1609702735031,"results":"43","hashOfConfig":"34"},{"size":553,"mtime":1609336079317,"results":"44","hashOfConfig":"34"},{"size":1333,"mtime":1609637478853,"results":"45","hashOfConfig":"34"},{"size":1211,"mtime":1609353532491,"results":"46","hashOfConfig":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"l93ant",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"9qh3sr",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"D:\\EaD\\JavaScripy\\romannumerals\\src\\index.js",[],["99","100"],"D:\\EaD\\JavaScripy\\romannumerals\\src\\App.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js",["101"],"import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport Home from '../TitleColor';\r\nimport ConversorNumeric from '../ConversorNumeric';\r\n// import ServerList from '../ServerList';\r\n// import ServerName from '../ServerName';\r\n// import ChannelInfo from '../ChannelInfo';\r\n// import ChannelList from '../ChannelList';\r\n// import UserInfo from '../UserInfo';\r\n// import UserList from '../UserList';\r\n// import ChannelData from '../ChannelData';\r\n\r\nexport default function() {\r\n  return (\r\n    <Grid>\r\n      <Home/>\r\n      <ConversorNumeric/>\r\n    </Grid>\r\n  );\r\n};\r\n","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js",["102"],"import React from 'react';\r\n\r\nimport { Container, TitleRoman, SVG } from './styles';\r\n\r\nimport Logo from './coliseum.svg'\r\n\r\n// import ServerList from '../ServerList';\r\n// import ServerName from '../ServerName';\r\n// import ChannelInfo from '../ChannelInfo';\r\n// import ChannelList from '../ChannelList';\r\n// import UserInfo from '../UserInfo';\r\n// import UserList from '../UserList';\r\n// import ChannelData from '../ChannelData';\r\n\r\nexport default function() {\r\n  return (\r\n    <Container>\r\n      <SVG src={Logo}/>\r\n      <TitleRoman>Roman numerals </TitleRoman>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js",["103","104","105","106"],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js",[],"D:\\EaD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\index.js",[],["107","108"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\App.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\styles\\GlobalStyles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\index.js",["109"],"import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport Home from '../TitleColor';\r\nimport ConversorNumeric from '../ConversorNumeric';\r\nimport Description from '../Description';\r\n\r\nexport default function() {\r\n  return (\r\n    <Grid>\r\n      <Home/>\r\n      <ConversorNumeric/>\r\n      <Description/>\r\n    </Grid>\r\n  );\r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Layout\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\index.js",["110"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\index.js",["111","112","113"],"import React from 'react';\r\n\r\nimport { Container, Content,  Converter, Button, Result } from './styles';\r\n\r\nimport getDecimal from './functions/decimal';\r\nimport getRoman from './functions/roman'\r\n\r\nlet romanVerification = 'IVXLCDM'.slice('');\r\n\r\n\r\n\r\n\r\nexport default class data extends React.Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      result:''\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getDecimal = getDecimal.bind(this);\r\n    this.getRoman = getRoman.bind(this);\r\n    // this.configRomanCharacter = this.configRomanCharacter.bind(this);\r\n  }\r\n  \r\n  \r\n\r\n  \r\n\r\n  handleClick(e) {\r\n    let number = this.state.text;\r\n\r\n    if(isNaN(number) && number){\r\n      number = this.getRoman(number);\r\n      if(number != getDecimal(number)[0])\r\n      this.setState({\r\n        text:getDecimal(number)[0]\r\n      })\r\n    }\r\n    else\r\n      number = getDecimal(number)[1];\r\n    \r\n    this.setState({\r\n      result:number\r\n    })\r\n  }\r\n\r\n  countVerification(previous, current, index){\r\n    let boolean = false;\r\n    previous = [previous[index],previous[index+1], previous[index+2], previous[index+3] ]\r\n    current = Array(4).fill(current);\r\n    if(previous.toString() == current.toString() )\r\n    boolean = true\r\n    if(!isNaN(current.join('')))\r\n    boolean = false\r\n    return boolean;\r\n  }\r\n\r\n  handleChange(e){\r\n    let lastLetter = e.nativeEvent.data;\r\n    \r\n    if(lastLetter == null){\r\n      this.setState({text: e.target.value.toUpperCase()});\r\n      return\r\n    } \r\n\r\n    if(romanVerification.includes(lastLetter.toUpperCase()) || !isNaN(e.target.value)){\r\n      if(!isNaN(this.state.text) &&  isNaN(lastLetter) && !this.state.text == '' ){\r\n        return\r\n      }\r\n      for (let i = 0; i < e.target.value.length ; i++){\r\n        let valueUpperCase = e.target.value.toUpperCase();\r\n        if(this.countVerification(valueUpperCase,e.nativeEvent.data.toUpperCase(), i)){\r\n            return          \r\n        }\r\n      \r\n      }\r\n      this.setState({text: e.target.value.toUpperCase()});\r\n    }\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Container>\r\n        <Content>\r\n          <label for=\"converter\">Digite um número decimal ou Algarismo Romano</label>\r\n          <Converter maxLength='7' id=\"converter\" onChange={this.handleChange} value={this.state.text}/>\r\n          <Button onClick={this.handleClick}>Converter Número</Button>\r\n          <Result >{this.state.result}</Result>\r\n        </Content>\r\n        \r\n  \r\n      </Container>\r\n    );\r\n  }\r\n  \r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\TitleColor\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\styles.js",[],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\decimal.js",["114","115","116","117","118"],"D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\ConversorNumeric\\functions\\roman.js",["119","120"],"\r\n\r\n\r\nconst romanConverter = {\r\n  'I': 1,\r\n  'V': 5,\r\n  'X':10,\r\n  'L':50,\r\n  'C':100,\r\n  'D':500,\r\n  'M':1000\r\n}\r\n\r\nexport default function(text){\r\n    let arrayNumerals = text.toString().split('');\r\n    let trade = text.toString().split('');\r\n    \r\n\r\n    let number = 0;\r\n    arrayNumerals.forEach((element, index, array) => {\r\n      if((romanConverter[array[index]] < romanConverter[array[index+1]])){\r\n          number -=  romanConverter[element]\r\n        \r\n      }\r\n      else\r\n      number += romanConverter[element]\r\n    })\r\n    return number;\r\n}","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\index.js",["121"],"import React from 'react';\r\n\r\nimport getDecimal from '../ConversorNumeric/functions/decimal'\r\nimport { Container, Introdution, List } from './styles';\r\n\r\n\r\nfunction ListItem(props) {\r\n  let numbers = {\r\n    1: [1,2,3,4,5,6,7,8,9,10],\r\n    2: [15,20,30,40,50,100,200,400,500,1000]\r\n  }\r\n\r\n  return <li>{getDecimal(numbers[props.page][props.value])[0]} = {numbers[props.page][props.value]}</li>;\r\n}\r\n\r\nfunction NumberList(props) {\r\n  const numbers = props.numbers;\r\n  const listItems = numbers.map((number, index) =>\r\n    // Correct! Key should be specified inside the array.\r\n    <ListItem value={number + index} page={props.page}/>\r\n  );\r\n  return (\r\n    <ul>\r\n      {listItems}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default function() {\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Introdution><article>\r\n        Na Roma Antiga, foi inventado o sistema de numeração romana, composto por sete letras: I, V, X, L, C, D, M.\r\n        <br/>\r\n        Ademais, sendo equivalente à respectivamente 1, 5, 10, 50, 100, 500 e 1000\r\n        </article></Introdution>\r\n        <List>\r\n          <h1>Exemplos de números romanos para decimais.</h1>\r\n          <div>\r\n          <NumberList numbers={Array(10).fill(0)} page={1} />\r\n          <NumberList numbers={Array(10).fill(0)} page={2} />\r\n          </div>\r\n        </List>\r\n    </Container>\r\n  );\r\n};\r\n","D:\\EAD\\JavaScripy\\romannumerals\\src\\components\\Description\\styles.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":15,"column":1,"nodeType":"128","endLine":22,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":15,"column":1,"nodeType":"128","endLine":22,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":39,"column":34,"nodeType":"131","messageId":"132","endLine":39,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":104,"column":28,"nodeType":"131","messageId":"132","endLine":104,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":121,"column":76,"nodeType":"131","messageId":"132","endLine":121,"endColumn":78},{"ruleId":"133","severity":1,"message":"134","line":125,"column":11,"nodeType":"135","messageId":"136","endLine":125,"endColumn":16},{"ruleId":"122","replacedBy":"137"},{"ruleId":"124","replacedBy":"138"},{"ruleId":"126","severity":1,"message":"127","line":9,"column":1,"nodeType":"128","endLine":17,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":15,"column":1,"nodeType":"128","endLine":22,"endColumn":2},{"ruleId":"129","severity":1,"message":"139","line":38,"column":17,"nodeType":"131","messageId":"132","endLine":38,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":55,"column":28,"nodeType":"131","messageId":"132","endLine":55,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":71,"column":76,"nodeType":"131","messageId":"132","endLine":71,"endColumn":78},{"ruleId":"126","severity":1,"message":"127","line":7,"column":1,"nodeType":"128","endLine":86,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":29,"column":28,"nodeType":"131","messageId":"132","endLine":29,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":35,"column":28,"nodeType":"131","messageId":"132","endLine":35,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":51,"column":36,"nodeType":"142","messageId":"143","endLine":51,"endColumn":38},{"ruleId":"140","severity":1,"message":"141","line":51,"column":52,"nodeType":"142","messageId":"143","endLine":51,"endColumn":54},{"ruleId":"126","severity":1,"message":"127","line":14,"column":1,"nodeType":"128","endLine":29,"endColumn":2},{"ruleId":"133","severity":1,"message":"144","line":16,"column":9,"nodeType":"135","messageId":"136","endLine":16,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":29,"column":1,"nodeType":"128","endLine":48,"endColumn":2},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar",["145"],["146"],"Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'trade' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]